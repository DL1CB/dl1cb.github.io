(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[4],{bd8c:function(t,e,a){"use strict";a.r(e);var c=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"q-pa-md"},[a("q-card",[a("q-card-actions",{attrs:{vertical:""}},[a("q-btn",{staticClass:"glossy",attrs:{rounded:"",color:"primary",label:"Register Blue"},on:{click:t.connectAsync}})],1)],1),t._v("\n\n  "+t._s(t.logs)+" \n")],1)},i=[],n=(a("e6cf"),{name:"DigiRegTest",data(){return{logs:[]}},methods:{log(t){console.log(t),this.logs.push(t)},async connectAsync(){const t=this.log;try{const e="6e400001-b5a3-f393-e0a9-e50e24dcca9e",a="6e400002-b5a3-f393-e0a9-e50e24dcca9e",c="6e400003-b5a3-f393-e0a9-e50e24dcca9e";t("Requesting Bluetooth Device");const i=await navigator.bluetooth.requestDevice({filters:[{services:[e]}]});t("Connecting to GATT Server");const n=await i.gatt.connect();t("Getting Service");const s=await n.getPrimaryService(e);t("Getting TX Characteristic");const r=await s.getCharacteristic(c);t("TX Characteristic addEventListener"),await r.addEventListener("characteristicvaluechanged",(function(e,a,c,i){t("TX Characteristic Value Changed"),t(r.value);const n=new TextDecoder("utf-8"),s=JSON.parse(n.decode(r.value));t(s)})),t("Start TX Notifications"),await r.startNotifications(),t("Getting RX Characteristic");const o=await s.getCharacteristic(a);t("Writing RX Characteristic");const l=new TextEncoder,d=l.encode(JSON.stringify({hello:"world"}),"utf-8"),u=await o.writeValue(d);t(u),t("Sleep Before Disconnect"),await new Promise((t=>setTimeout(t,5e3))),t("Disconnect");const g=await i.gatt.disconnect();t(g)}catch(e){t("error"),t(e)}}}}),s=n,r=a("2877"),o=Object(r["a"])(s,c,i,!1,null,null,null);e["default"]=o.exports}}]);